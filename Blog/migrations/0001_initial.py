# Generated by Django 3.1.2 on 2021-03-03 09:07

from django.db import migrations, models
import django.db.models.deletion
import django_jalali.db.models
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnjomanPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('paragraph1', models.TextField(blank=True)),
                ('paragraph2', models.TextField(blank=True)),
                ('paragraph3', models.TextField(blank=True)),
                ('paragraph4', models.TextField(blank=True)),
                ('image', models.ImageField(upload_to='post_images')),
                ('paragraph5', models.TextField(blank=True)),
                ('paragraph6', models.TextField(blank=True)),
                ('paragraph7', models.TextField(blank=True)),
                ('paragraph8', models.TextField(blank=True)),
                ('important_part', models.TextField(blank=True)),
                ('paragraph9', models.TextField(blank=True)),
                ('paragraph10', models.TextField(blank=True)),
                ('paragraph11', models.TextField(blank=True)),
                ('paragraph12', models.TextField(blank=True)),
                ('paragraph13', models.TextField(blank=True)),
                ('paragraph14', models.TextField(blank=True)),
                ('paragraph15', models.TextField(blank=True)),
                ('summ', models.TextField(max_length=200)),
                ('published', django_jalali.db.models.jDateField()),
                ('prof', models.CharField(max_length=100)),
                ('slug', models.SlugField(allow_unicode=True, max_length=200, unique=True)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='BaseContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('info', models.TextField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='HomeContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='HomeGholak',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('info', models.TextField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='MaghaalaatPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('paragraph1', models.TextField(blank=True)),
                ('paragraph2', models.TextField(blank=True)),
                ('paragraph3', models.TextField(blank=True)),
                ('paragraph4', models.TextField(blank=True)),
                ('image', models.ImageField(upload_to='post_images')),
                ('paragraph5', models.TextField(blank=True)),
                ('paragraph6', models.TextField(blank=True)),
                ('paragraph7', models.TextField(blank=True)),
                ('paragraph8', models.TextField(blank=True)),
                ('important_part', models.TextField(blank=True)),
                ('paragraph9', models.TextField(blank=True)),
                ('paragraph10', models.TextField(blank=True)),
                ('paragraph11', models.TextField(blank=True)),
                ('paragraph12', models.TextField(blank=True)),
                ('paragraph13', models.TextField(blank=True)),
                ('paragraph14', models.TextField(blank=True)),
                ('paragraph15', models.TextField(blank=True)),
                ('pdflink', models.TextField(blank=True)),
                ('summ', models.TextField(max_length=200)),
                ('pdf', models.FileField(upload_to='post_pdf')),
                ('published', django_jalali.db.models.jDateField()),
                ('prof', models.CharField(max_length=100)),
                ('slug', models.SlugField(allow_unicode=True, max_length=200, unique=True)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='StoryPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('paragraph1', models.TextField(blank=True)),
                ('paragraph2', models.TextField(blank=True)),
                ('paragraph3', models.TextField(blank=True)),
                ('paragraph4', models.TextField(blank=True)),
                ('image', models.ImageField(upload_to='post_images')),
                ('paragraph5', models.TextField(blank=True)),
                ('paragraph6', models.TextField(blank=True)),
                ('paragraph7', models.TextField(blank=True)),
                ('paragraph8', models.TextField(blank=True)),
                ('important_part', models.TextField(blank=True)),
                ('paragraph9', models.TextField(blank=True)),
                ('paragraph10', models.TextField(blank=True)),
                ('paragraph11', models.TextField(blank=True)),
                ('paragraph12', models.TextField(blank=True)),
                ('paragraph13', models.TextField(blank=True)),
                ('paragraph14', models.TextField(blank=True)),
                ('paragraph15', models.TextField(blank=True)),
                ('summ', models.TextField(max_length=200)),
                ('published', django_jalali.db.models.jDateField()),
                ('prof', models.CharField(max_length=100)),
                ('slug', models.SlugField(allow_unicode=True, max_length=200, unique=True)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='SukhtegiPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('paragraph1', models.TextField(blank=True)),
                ('paragraph2', models.TextField(blank=True)),
                ('paragraph3', models.TextField(blank=True)),
                ('paragraph4', models.TextField(blank=True)),
                ('image', models.ImageField(upload_to='post_images')),
                ('paragraph5', models.TextField(blank=True)),
                ('paragraph6', models.TextField(blank=True)),
                ('paragraph7', models.TextField(blank=True)),
                ('paragraph8', models.TextField(blank=True)),
                ('important_part', models.TextField(blank=True)),
                ('paragraph9', models.TextField(blank=True)),
                ('paragraph10', models.TextField(blank=True)),
                ('paragraph11', models.TextField(blank=True)),
                ('paragraph12', models.TextField(blank=True)),
                ('paragraph13', models.TextField(blank=True)),
                ('paragraph14', models.TextField(blank=True)),
                ('paragraph15', models.TextField(blank=True)),
                ('summ', models.TextField(max_length=200)),
                ('published', django_jalali.db.models.jDateField()),
                ('prof', models.CharField(max_length=100)),
                ('slug', models.SlugField(allow_unicode=True, max_length=200, unique=True)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='SukhtegiVideos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('videos', models.FileField(blank=True, upload_to='post_videos')),
                ('post', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Blog.sukhtegipost')),
            ],
        ),
        migrations.CreateModel(
            name='SukhtegiImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images', models.FileField(blank=True, upload_to='post_images')),
                ('post', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Blog.sukhtegipost')),
            ],
        ),
        migrations.CreateModel(
            name='StoryVideos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('videos', models.FileField(blank=True, upload_to='post_videos')),
                ('post', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Blog.storypost')),
            ],
        ),
        migrations.CreateModel(
            name='StoryImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images', models.FileField(blank=True, upload_to='post_images')),
                ('post', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Blog.storypost')),
            ],
        ),
        migrations.CreateModel(
            name='MaghaalaatVideos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('videos', models.FileField(blank=True, upload_to='post_videos')),
                ('post', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Blog.maghaalaatpost')),
            ],
        ),
        migrations.CreateModel(
            name='MaghaalaatImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images', models.FileField(blank=True, upload_to='post_images')),
                ('post', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Blog.maghaalaatpost')),
            ],
        ),
        migrations.CreateModel(
            name='AnjomanVideos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('videos', models.FileField(blank=True, upload_to='post_videos')),
                ('post', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Blog.anjomanpost')),
            ],
        ),
        migrations.CreateModel(
            name='AnjomanImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images', models.FileField(blank=True, upload_to='post_images')),
                ('post', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Blog.anjomanpost')),
            ],
        ),
    ]
